angular.module("myApp",[]).factory("gameLogic",function(){"use strict";function a(a){return{territory:{Alaska:{name:"Alaska",neighbors:{Northwest_Territory:1,Alberta:1,Kamachatka:1},continent:"North_America",owner:null,units:0},Northwest_Territory:{name:"Northwest_Territory",neighbors:{Alaska:1,Alberta:1,Ontario:1,Greenland:1},continent:"North_America",owner:null,units:0},Greenland:{name:"Greenland",neighbors:{Northwest_Territory:1,Ontario:1,Eastern_Canada:1,Iceland:1},continent:"North_America",owner:null,units:0},Alberta:{name:"Alberta",neighbors:{Alaska:1,Northwest_Territory:1,Ontario:1,Western_United_States:1},continent:"North_America",owner:null,units:0},Ontario:{name:"Ontario",neighbors:{Northwest_Territory:1,Alberta:1,Western_United_States:1,Eastern_United_States:1,Eastern_Canada:1,Greenland:1},continent:"North_America",owner:null,units:0},Eastern_Canada:{name:"Eastern_Canada",neighbors:{Ontario:1,Eastern_United_States:1,Greenland:1},continent:"North_America",owner:null,units:0},Western_United_States:{name:"Western_United_States",neighbors:{Ontario:1,Alberta:1,Central_America:1,Eastern_United_States:1},continent:"North_America",owner:null,units:0},Eastern_United_States:{name:"Eastern_United_States",neighbors:{Western_United_States:1,Central_America:1,Ontario:1,Eastern_Canada:1},continent:"North_America",owner:null,units:0},Central_America:{name:"Central_America",neighbors:{Western_United_States:1,Eastern_United_States:1,Venezuela:1},continent:"North_America",owner:null,units:0},Venezuela:{name:"Venezuela",neighbors:{Central_America:1,Peru:1,Brazil:1},continent:"South_America",owner:null,units:0},Peru:{name:"Peru",neighbors:{Venezuela:1,Brazil:1,Argentina:1},continent:"South_America",owner:null,units:0},Brazil:{name:"Brazil",neighbors:{Venezuela:1,Peru:1,Argentina:1,North_Africa:1},continent:"South_America",owner:null,units:0},Argentina:{name:"Argentina",neighbors:{Peru:1,Brazil:1},continent:"South_America",owner:null,units:0},Iceland:{name:"Iceland",neighbors:{Greenland:1,Great_Britain:1,Scandinavia:1},continent:"Europe",owner:null,units:0},Scandinavia:{name:"Scandinavia",neighbors:{Iceland:1,Great_Britain:1,Northern_Europe:1,Russia:1},continent:"Europe",owner:null,units:0},Russia:{name:"Russia",neighbors:{Scandinavia:1,Northern_Europe:1,Southern_Europe:1,Ural:1,Afghanistan:1,Middle_East:1},continent:"Europe",owner:null,units:0},Great_Britain:{name:"Great_Britain",neighbors:{Iceland:1,Scandinavia:1,Northern_Europe:1,Western_Europe:1},continent:"Europe",owner:null,units:0},Northern_Europe:{name:"Northern_Europe",neighbors:{Great_Britain:1,Western_Europe:1,Southern_Europe:1,Russia:1,Scandinavia:1},continent:"Europe",owner:null,units:0},Western_Europe:{name:"Western_Europe",neighbors:{Great_Britain:1,Northern_Europe:1,Southern_Europe:1,North_Africa:1},continent:"Europe",owner:null,units:0},Southern_Europe:{name:"Southern_Europe",neighbors:{Western_Europe:1,Northern_Europe:1,Russia:1,North_Africa:1,Egypt:1,Middle_East:1},continent:"Europe",owner:null,units:0},North_Africa:{name:"North_Africa",neighbors:{Southern_Europe:1,Western_Europe:1,Brazil:1,Central_Africa:1,East_Africa:1,Egypt:1},continent:"Africa",owner:null,units:0},Egypt:{name:"Egypt",neighbors:{Southern_Europe:1,Western_Europe:1,North_Africa:1,East_Africa:1,Middle_East:1},continent:"Africa",owner:null,units:0},East_Africa:{name:"East_Africa",neighbors:{Egypt:1,North_Africa:1,Central_Africa:1,South_Africa:1,Madagascar:1,Middle_East:1},continent:"Africa",owner:null,units:0},Central_Africa:{name:"Central_Africa",neighbors:{North_Africa:1,South_Africa:1,East_Africa:1},continent:"Africa",owner:null,units:0},South_Africa:{name:"South_Africa",neighbors:{Central_Africa:1,East_Africa:1,Madagascar:1},continent:"Africa",owner:null,units:0},Madagascar:{name:"Madagascar",neighbors:{South_Africa:1,East_Africa:1},continent:"Africa",owner:null,units:0},Ural:{name:"Ural",neighbors:{Russia:1,Afghanistan:1,China:1,Siberia:1},continent:"Asia",owner:null,units:0},Siberia:{name:"Siberia",neighbors:{Ural:1,China:1,Mongolia:1,Irkutsk:1,Yakutsk:1},continent:"Asia",owner:null,units:0},Yakutsk:{name:"Yakutsk",neighbors:{Siberia:1,Irkutsk:1,Kamchatka:1},continent:"Asia",owner:null,units:0},Kamchatka:{name:"Kamchatka",neighbors:{Yakutsk:1,Irkutsk:1,Mongolia:1,Japan:1,Alaska:1},continent:"Asia",owner:null,units:0},Irkutsk:{name:"Irkutsk",neighbors:{Siberia:1,Mongolia:1,Kamchatka:1,Yakutsk:1},continent:"Asia",owner:null,units:0},Mongolia:{name:"Mongolia",neighbors:{Siberia:1,China:1,Japan:1,Kamchatka:1,Irkutsk:1},continent:"Asia",owner:null,units:0},Japan:{name:"Japan",neighbors:{Mongolia:1,Kamchatka:1},continent:"Asia",owner:null,units:0},Afghanistan:{name:"Afghanistan",neighbors:{Russia:1,Middle_East:1,India:1,China:1,Ural:1},continent:"Asia",owner:null,units:0},China:{name:"China",neighbors:{Afghanistan:1,India:1,Southeast_Asia:1,Mongolia:1,Siberia:1,Ural:1},continent:"Asia",owner:null,units:0},Middle_East:{name:"Middle_East",neighbors:{Russia:1,Southern_Europe:1,Egypt:1,East_Africa:1,India:1,Afghanistan:1},continent:"Asia",owner:null,units:0},India:{name:"India",neighbors:{Middle_East:1,Southeast_Asia:1,China:1,Afghanistan:1},continent:"Asia",owner:null,units:0},Southeast_Asia:{name:"Southeast_Asia",neighbors:{India:1,China:1,Indonesia:1},continent:"Asia",owner:null,units:0},Indonesia:{name:"Indonesia",neighbors:{Southeast_Asia:1,New_Guinea:1,Western_Australia:1},continent:"Australia",owner:null,units:0},New_Guinea:{name:"New_Guinea",neighbors:{Indonesia:1,Western_Australia:1,Eastern_Australia:1},continent:"Australia",owner:null,units:0},Western_Australia:{name:"Western_Australia",neighbors:{Indonesia:1,New_Guinea:1,Eastern_Australia:1},continent:"Australia",owner:null,units:0},Eastern_Australia:{name:"Eastern_Australia",neighbors:{New_Guinea:1,Western_Australia:1},continent:"Australia",owner:null,units:0}},phase:1,selected:"",target:"",totalPlayers:a,temp:0,players:{player1:{totalTerritories:0,remainUnits:30,Australia:0,Asia:0,Africa:0,Europe:0,South_America:0,North_America:0},player2:{totalTerritories:0,remainUnits:30,Australia:0,Asia:0,Africa:0,Europe:0,South_America:0,North_America:0}}}}function b(a){for(var b=0;2>b;b++)if(42===a.players["player"+(b+1)].totalTerritories)return"player"+(b+1);return""}function c(a,b){var c=[],d={d0:3,d1:4,d2:6,d3:1,d4:2},e=1,f="endTurn";for(var h in a.territory)for(var i in a.territory)try{c.push(g(f,a,b,h,i,d,e))}catch(j){}return c}function d(a){for(var b in a.territory)if(null===a.territory[b].owner)return!1;return!0}function e(a){var b=1;for(var c in a.territory)b=1-b,a.territory[c].owner=b,a.territory[c].units++;a.players.player1.totalTerritories=21,a.players.player2.totalTerritories=21,a.players.player1.remainUnits=9,a.players.player2.remainUnits=9}function f(a,b){var c=[{set:{key:"diceRoll",value:!0}},{setTurn:{turnIndex:b}}];void 0===a.d0&&(a.d0=null),void 0===a.d1&&(a.d1=null),void 0===a.d2&&(a.d2=null),void 0===a.d3&&(a.d3=null),void 0===a.d4&&(a.d4=null);var d;for(d in a)c.push({setRandomInteger:{key:d,from:1,to:7}});return c}function g(c,e,f,g,h,k,l){if(void 0===e&&(e=a(2)),""!==b(e))throw new Error("Can only make a move if the game is not over!");if(e.players.player1.remainUnits<0||e.players.player2.remainUnits<0)throw new Error("No enough units!");switch(e.phase){case 1:if("endTurn"===c)throw new Error("You can not end turn because you still have remain units");if(d(e)){if(e.territory[g].owner!==f)throw new Error("You can not deploy units on other's territory");var m=angular.copy(e);m.territory[g].units++,m.players["player"+(f+1)].remainUnits--;var n={setTurn:{turnIndex:1-f}};if(0===m.players["player"+(f+1)].remainUnits)if(console.log("lala"),0===f){console.log("lala");{i(m,f)}m.players["player"+(f+1)].remainUnits=i(m,f)}else m.phase=2,m.players["player"+(f+1)].remainUnits=i(m,f);return[{set:{key:"diceRoll",value:!1}},n,{set:{key:"board",value:m}},{set:{key:"delta",value:{moveType:c,country:g,targetCountry:h,moveUnits:l}}}]}if(null!==e.territory[g].owner)throw new Error("You have to deploy units on blank territory in first deploy phase");var m=angular.copy(e);m.territory[g].owner=f,m.territory[g].units++,m.players["player"+(f+1)].remainUnits--;var o=(i(m,f),m.territory[g].continent);m.players["player"+(f+1)][o]++,m.players["player"+(f+1)].totalTerritories++;var n={setTurn:{turnIndex:1-f}};return[{set:{key:"diceRoll",value:!1}},n,{set:{key:"board",value:m}},{set:{key:"delta",value:{moveType:c,country:g,targetCountry:h,moveUnits:l}}}];case 2:if("endTurn"===c)throw new Error("You can not end turn because you still have remain units");if(e.territory[g].owner!==f)throw new Error("You can not deploy units on other's territory");var m=angular.copy(e);m.territory[g].units++,m.players["player"+(f+1)].remainUnits--,0===m.players["player"+(f+1)].remainUnits&&(m.phase=3);var n={setTurn:{turnIndex:f}};return[{set:{key:"diceRoll",value:!1}},n,{set:{key:"board",value:m}},{set:{key:"delta",value:{moveType:c,country:g,targetCountry:h,moveUnits:l}}}];case 3:if("endTurn"===c){var m=angular.copy(e);m.phase=4;var n={setTurn:{turnIndex:f}};return[{set:{key:"diceRoll",value:!1}},n,{set:{key:"board",value:m}},{set:{key:"delta",value:{moveType:c,country:g,targetCountry:h,moveUnits:l}}}]}if(e.players["player"+(f+1)].remainUnits>0)throw new Error("You still have some units to reinforce");if(e.territory[g].owner!==f)throw new Error("You have to choose your own unit");if(1===e.territory[g].units)throw new Error("You have to choose a country with units more than one");if(Object.keys(e.territory[g].neighbors).indexOf(e.territory[h].name)<=-1)throw new Error("You can only attack adjacent countries");if(e.territory[h].owner===f)throw new Error("You can not attack your own territory");var m=angular.copy(e),p=j(e,e.territory[g].units,e.territory[g].owner,e.territory[h].units,e.territory[h].owner,k,l);if(m.territory[g].owner=p.attacker.owner,m.territory[h].owner=p.defender.owner,m.territory[g].units=p.attacker.units,m.territory[h].units=p.defender.units,m.territory[h].owner!==e.territory[h].owner){m.players["player"+(f+1)].totalTerritories++;var o=m.territory[h].continent;m.players["player"+(f+1)][o]++,m.players["player"+(0===f?2:1)].totalTerritories--,m.players["player"+(0===f?2:1)][o]--}var n={setTurn:{turnIndex:f}},q=b(m);return""!==q&&(n={endMatch:{endMatchScores:"player1"===q?[1,0]:[0,1]}}),[{set:{key:"diceRoll",value:!1}},n,{set:{key:"board",value:m}},{set:{key:"delta",value:{moveType:c,country:g,targetCountry:h,moveUnits:l}}}];case 4:if("endTurn"===c){var m=angular.copy(e);m.phase=2,m.players["player"+(f+1)].remainUnits=i(m,f);var n={setTurn:{turnIndex:1-f}};return[{set:{key:"diceRoll",value:!1}},n,{set:{key:"board",value:m}},{set:{key:"delta",value:{moveType:c,country:g,targetCountry:h,moveUnits:l}}}]}if(g===h)throw new Error("You can not fortify the same country");if(e.territory[g].owner!==f)throw new Error("You have to choose your own unit");if(1===e.territory[g].units)throw new Error("You have to choose a country with units more than one");if(!(Object.keys(e.territory[g].neighbors).indexOf(e.territory[h].name)>-1))throw new Error("You can only fortify adjacent countries");if(e.territory[h].owner!==f)throw new Error("You can only fortify your own territory");if(l>=e.territory[g].units||0>l)throw new Error("You can not move units more than you have.");var m=angular.copy(e);m.territory[g].units=e.territory[g].units-l,m.territory[h].units=e.territory[h].units+l;var n={setTurn:{turnIndex:f}};return[{set:{key:"diceRoll",value:!1}},n,{set:{key:"board",value:m}},{set:{key:"delta",value:{moveType:c,country:g,targetCountry:h,moveUnits:l}}}]}}function h(a){var b=a.move,c=a.turnIndexBeforeMove,d=a.stateBeforeMove;try{if(b[0].set.value){var e={d0:d.d0,d1:d.d1,d2:d.d2,d3:d.d3,d4:d.d4},h=f(e,c);if(!angular.equals(b,h))return!1}else{var i=b[3].set.value,j=i.targetCountry,k=i.moveUnits,e={d0:d.d0,d1:d.d1,d2:d.d2,d3:d.d3,d4:d.d4},l=i.moveType,m=i.country,n=d.board,h=g(l,n,c,m,j,e,k);if(!angular.equals(b,h))return!1}}catch(o){return console.log(o),!1}return!0}function i(a,b){var c;return c=a.players["player"+(b+1)].totalTerritories/3<3?3:Math.floor(a.players["player"+(b+1)].totalTerritories/3),12===a.players["player"+(b+1)].Asia&&(c+=7),4===a.players["player"+(b+1)].Australia&&(c+=2),6===a.players["player"+(b+1)].Africa&&(c+=3),7===a.players["player"+(b+1)].Europe&&(c+=5),9===a.players["player"+(b+1)].North_America&&(c+=5),4===a.players["player"+(b+1)].South_America&&(c+=2),c}function j(a,b,c,d,e,f,g){var h,i,j,k,l=[],m=[];if(5!==Object.keys(f).length)throw new Error("Need 5 dices to perform an attack!");if(1===b)return i;for(j=2===b?1:3===b?2:3,k=1===d?1:2,h=0;j>h;h++)l[h]=f["d"+h];for(h=0;k>h;h++)m[h]=f["d"+(h+3)];if(3===j&&2===k){var n=Math.max.apply(null,l);l.splice(l.indexOf(n),1);var o=Math.max.apply(null,l),p=Math.max.apply(null,m);m.splice(m.indexOf(p),1);var q=m[0];n>p?d--:b--,o>q?d--:b--}else if(3===j&&1===k){var n=Math.max.apply(null,l),p=m[0];n>p?d--:b--}else if(2===j&&2===k){var n=Math.max.apply(null,l);l.splice(l.indexOf(n),1);var o=l[0],p=Math.max.apply(null,m);m.splice(m.indexOf(p),1);var q=m[0];n>p?d--:b--,o>q?d--:b--}else if(2===j&&1===k){var n=Math.max.apply(null,l),p=m[0];n>p?d--:b--}else if(1===j&&2===k){var n=l[0],p=Math.max.apply(null,m);n>p?d--:b--}else if(1===j&&1===k){var n=l[0],p=m[0];n>p?d--:b--}return 0===d&&(e=c,d=g,b-=g),i={attacker:{owner:c,units:b},defender:{owner:e,units:d}}}function k(a,b,c,d,e){{var f,g,h,i,j=[],k=[],l=a.territory[c].units,m=(a.territory[c].owner,a.territory[d].units);a.territory[d].owner}if(a.players["player"+(b+1)].remainUnits>0)throw new Error("You still have some units to reinforce");if(a.territory[c].owner!==b)throw new Error("You have to choose your own unit");if(1===a.territory[c].units)throw new Error("You have to choose a country with units more than one");if(Object.keys(a.territory[c].neighbors).indexOf(a.territory[d].name)<=-1)throw new Error("You can only attack adjacent countries");if(a.territory[d].owner===b)throw new Error("You can not attack your own territory");if(5!==Object.keys(e).length)throw new Error("Need 5 dices to perform an attack!");if(1===l)return g;for(h=2===l?1:3===l?2:3,i=1===m?1:2,f=0;h>f;f++)j[f]=e["d"+f];for(f=0;i>f;f++)k[f]=e["d"+(f+3)];if(3===h&&2===i){var n=Math.max.apply(null,j);j.splice(j.indexOf(n),1);var o=Math.max.apply(null,j),p=Math.max.apply(null,k);k.splice(k.indexOf(p),1);var q=k[0];n>p?m--:l--,o>q?m--:l--}else if(3===h&&1===i){var n=Math.max.apply(null,j),p=k[0];n>p?m--:l--}else if(2===h&&2===i){var n=Math.max.apply(null,j);j.splice(j.indexOf(n),1);var o=j[0],p=Math.max.apply(null,k);k.splice(k.indexOf(p),1);var q=k[0];n>p?m--:l--,o>q?m--:l--}else if(2===h&&1===i){var n=Math.max.apply(null,j),p=k[0];n>p?m--:l--}else if(1===h&&2===i){var n=j[0],p=Math.max.apply(null,k);n>p?m--:l--}else if(1===h&&1===i){var n=j[0],p=k[0];n>p?m--:l--}return 0===m}return{getInitialBoard:a,createMove:g,createRollMove:f,isMoveOk:h,getWinner:b,boardIsFull:d,addOneUnitOnEachCountry:e,getPossibleMoves:c,checkIfWin:k}}),angular.module("myApp").controller("Ctrl",function(a,b,c,d,e,f,g,h){"use strict";function i(){var a=g.getPossibleMoves(b.board,b.turnIndex);e.makeMove(a[Math.floor(Math.random()*a.length)])}function j(a){b.board=a.stateAfterMove.board,b.delta=a.stateAfterMove.delta,b.dice={},b.dice.d0=void 0!==a.stateAfterMove.d0?a.stateAfterMove.d0:null,b.dice.d1=void 0!==a.stateAfterMove.d1?a.stateAfterMove.d1:null,b.dice.d2=void 0!==a.stateAfterMove.d2?a.stateAfterMove.d2:null,b.dice.d3=void 0!==a.stateAfterMove.d3?a.stateAfterMove.d3:null,b.dice.d4=void 0!==a.stateAfterMove.d4?a.stateAfterMove.d4:null,void 0===b.board&&(b.board=g.getInitialBoard(2)),b.isYourTurn=a.turnIndexAfterMove>=0&&a.yourPlayerIndex===a.turnIndexAfterMove,b.turnIndex=a.turnIndexAfterMove,b.isYourTurn&&""===a.playersInfo[a.yourPlayerIndex].playerId&&(b.isYourTurn=!1,d(i,500))}h.setWidthToHeight(1.36);window.e2e_test_stateService=f,b.countryClicked=function(a){if(b.isYourTurn)try{if(1===b.board.phase||2===b.board.phase){var d=g.createMove(null,b.board,b.turnIndex,a,null,null,null);b.isYourTurn=!1,e.makeMove(d)}else if(3===b.board.phase)if(""===b.board.selected){if(b.board.territory[a].owner===b.turnIndex){b.board.selected=a;var f=document.getElementById(a+"_Owner");f.style.height="6%";for(var h in b.board.territory[a].neighbors)b.board.territory[h].owner!==b.turnIndex&&(f=document.getElementById(h+"_Owner"),f.style["-webkit-animation-iteration-count"]="3")}}else{var d=g.createRollMove(b.dice,b.turnIndex);e.makeMove(d),b.board.target=a;{b.board.territory[b.board.selected].units,b.board.territory[b.board.selected].owner,b.board.territory[b.board.target].units,b.board.territory[b.board.target].owner}if(g.checkIfWin(b.board,b.turnIndex,b.board.selected,b.board.target,b.dice))k.signinModal=!0;else{b.moveUnits=0;var d=g.createMove(null,b.board,b.turnIndex,b.board.selected,b.board.target,b.dice,b.moveUnits);b.isYourTurn=!1,e.makeMove(d);var f=document.getElementById(b.board.selected+"_Owner");f.style.height="4%",b.board.selected="",b.board.target="";for(var i in b.board.territory){var f=document.getElementById(i+"_Owner");f.style["-webkit-animation-iteration-count"]="0"}}}else if(""===b.board.selected){b.board.selected=a;var f=document.getElementById(a+"_Owner");f.style.height="6%"}else{b.board.target=a,k.signinModal=!0;var f=document.getElementById(b.board.selected+"_Owner");f.style.height="4%"}}catch(j){var f=document.getElementById(b.board.selected+"_Owner");f.style.height="4%",b.board.selected="",b.board.target="";for(var i in b.board.territory){var f=document.getElementById(i+"_Owner");f.style["-webkit-animation-iteration-count"]="0"}return void c.info(["country is already full in position:",a])}},b.move=function(){b.moveUnits=parseInt(document.getElementById("moveUnits").value);var a=g.createMove(null,b.board,b.turnIndex,b.board.selected,b.board.target,b.dice,b.moveUnits);b.isYourTurn=!1,e.makeMove(a);var c=document.getElementById(b.board.selected+"_Owner");c.style.height="4%",b.board.selected="",b.board.target="";for(var d in b.board.territory)c=document.getElementById(d+"_Owner"),c.style["-webkit-animation-iteration-count"]="0";k.signinModal=!1},b.endTurnClicked=function(){if(b.isYourTurn)try{var a=g.createMove("endTurn",b.board,b.turnIndex,null,null,null,null);b.isYourTurn=!1,e.makeMove(a)}catch(d){return void c.info(["You can not end turn because you still have remain units"])}},b.shouldShowUnits=function(){return 4===b.board.phase&&""!==b.board.selected&&b.board.territory[b.board.selected].owner===b.turnIndex},b.shouldShowNumber=function(a){var c=b.board.territory[a].units;return 0!==c},b.isPieceRed=function(a){return 0===b.board.territory[a].owner},b.isPieceRed=function(a){return 0===b.board.territory[a].owner},b.getCountry=function(){return b.board.selected},b.getTurn=function(){return b.turnIndex},b.getNumber=function(a){return b.board.territory[a].units},b.getUnit=function(a){return b.board.players[a].remainUnits},b.getMovableUnits=function(){if(""!==b.board.selected){var a=b.board.selected;return b.board.territory[a].units-1}return 0},b.getMinMovableUnits=function(){if(""!==b.board.selected&&3===b.board.phase){var a=b.board.selected;return b.board.territory[a].units>=4?3:3===b.board.territory[a].units?2:2===b.board.territory[a].units?1:0}return 0},b.getPhase=function(){return 1===b.board.phase?"deploy":2===b.board.phase?"reinforce":3===b.board.phase?"attack":"fortify"},b.getDices=function(){return b.dice},b.getImageSrc=function(a){return 0===b.board.territory[a].owner?"red.png":"green.png"};var k={};b.isModalShown=function(a){return k[a]},b.dismissModal=function(a){delete k[a]},e.setGame({gameDeveloperEmail:"zl953@nyu.edu",minNumberOfPlayers:2,maxNumberOfPlayers:2,isMoveOk:g.isMoveOk,updateUI:j})});
//# sourceMappingURL=everything.min.js.map